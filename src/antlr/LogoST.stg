group LogoTree;

jasminFile(filename, block, locals, stack) ::= <<
; public class Main extends Object { ...}
.source <filename>
.class public Main
.super java/lang/Object

.field public foo I
;.field private static gen Lmsu/cse/turtlegraphics/Turtle;
.field public static turtle  Lmsu/cse/turtlegraphics/Turtle;
.field public static frame   Lmsu/cse/turtlegraphics/TurtleDisplayFrame;

;// Static initializer
;// Instantiate and initialize the turtle object and the display frame, as 
;// well as show the display frame.
.method static public \<clinit\>()V
  .limit stack 2
   
  .line 1 ;// static Turtle turtle = new Turtle();
    new msu/cse/turtlegraphics/Turtle
    dup
    invokenonvirtual msu/cse/turtlegraphics/Turtle/\<init\>()V
    putstatic Main/turtle Lmsu/cse/turtlegraphics/Turtle;
   
  .line 2 ;// static TurtleDisplayFrame frame = new TurtleDisplayFrame();
    new msu/cse/turtlegraphics/TurtleDisplayFrame
    dup
    invokenonvirtual msu/cse/turtlegraphics/TurtleDisplayFrame/\<init\>()V
    putstatic Main/frame Lmsu/cse/turtlegraphics/TurtleDisplayFrame;
   
  .line 3 ;// frame.setVisible(true);
    getstatic Main/frame Lmsu/cse/turtlegraphics/TurtleDisplayFrame;
    ldc 1
    invokevirtual msu/cse/turtlegraphics/TurtleDisplayFrame/setVisible(Z)V
   
  .line 4 ;// turtle.setCurrentTurtleDisplayCanvas(frame.getCurrentCanvas());
    getstatic Main/turtle Lmsu/cse/turtlegraphics/Turtle;
      getstatic Main/frame Lmsu/cse/turtlegraphics/TurtleDisplayFrame;
      invokevirtual msu/cse/turtlegraphics/TurtleDisplayFrame/getCurrentCanvas()Lmsu/cse/turtlegraphics/TurtleDisplayCanvas;
    invokevirtual msu/cse/turtlegraphics/Turtle/setCurrentTurtleDisplayCanvas(Lmsu/cse/turtlegraphics/TurtleDisplayCanvas;)V
    
   return
.end method

; public Main() { super(); } // calls java.lang.Object()
.method public ()V
   aload_0
   invokenonvirtual java/lang/Object/()V
   return
.end method

; main(): Expr.g will generate bytecode in this method
.method public static main([Ljava/lang/String;)V
   .limit stack <stack>   ;// how much stack space do we need?
   .limit locals <locals> ;// how many locals do we need?

   <block; separator="\n">

   return
.end method
>>
// END:file


block(lines) ::= <<
; BLOCK
<lines; separator="\n">
>>

line(line,text,v) ::= <<

.line <line> ;// <text>
    <v>
>>

// START:stat
assign(varNum,v,varName,type) ::= <<
<v>

<type>store <varNum> ; // <varName>
>>

write(it) ::= <<
<it>
>>

mathDebug(v, d) ::= <<

; <d>
    <v; separator="\n">
>>
// END:stat

coerce(a,from,to) ::= <<
<a>
<from>2<to>
>>



/******************************
 *       ADD
 ******************************/
add(l,r,float,cr,cl) ::= <<
<l>
<cl>
<r>
<cr>

<type>add
>>

/******************************
 *       SUBTRACT
 ******************************/
sub(l,r,float,cr,cl) ::= <<
<l>
<cl>
<r>
<cr>

<type>sub
>>

/******************************
 *       MULTIPLY
 ******************************/
mult(l,r,float,cr,cl) ::= <<
<l>
<cl>
<r>
<cr>

<type>mul
>>


/******************************
 *       DIVIDE
 ******************************/
div(l,r,float,cr,cl) ::= <<
<l>
<cl>
<r>
<cr>

<type>div
>>

/******************************
 *       LOAD CONSTANT
 ******************************/
ldc(value) ::= <<
ldc <value>
>>

/******************************
 *       STORE VALUE
 ******************************/
var(varName, varNum, float, int, type) ::= <<
<if (float)>
fload <varNum> ;// <varName>
<endif>
<if (int)>
iload <varNum> ;// <varName>
<endif>
>>


/******************************
 *       PRINT
 ******************************/
print(class,v) ::= <<
getstatic java/lang/System/out Ljava/io/PrintStream;
<v>
invokevirtual java/io/PrintStream/print(<class>)V
>>

println(before) ::= <<
<before; separator="\n">
getstatic     java/lang/System/out Ljava/io/PrintStream;
invokevirtual java/io/PrintStream/println()V
>>

/******************************
 *       TURTLE
 ******************************/
turtle(args,signature,argtypes,returntype) ::= <<
getstatic Main/turtle Lmsu/cse/turtlegraphics/Turtle;
<args; separator="\n">
invokevirtual <signature>(<argtypes>)<returntype>
>>